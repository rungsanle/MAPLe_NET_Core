#pragma checksum "D:\Learning\Repositories\AdminLTE-Maple2-Master\trunk\src\Pages\UI\Modals.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a94242d6d058c4187c96464e1d59d3bbd621c209"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Maple2.AdminLTE.Uil.Pages.UI.Pages_UI_Modals), @"mvc.1.0.razor-page", @"/Pages/UI/Modals.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/UI/Modals.cshtml", typeof(Maple2.AdminLTE.Uil.Pages.UI.Pages_UI_Modals), null)]
namespace Maple2.AdminLTE.Uil.Pages.UI
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Learning\Repositories\AdminLTE-Maple2-Master\trunk\src\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "D:\Learning\Repositories\AdminLTE-Maple2-Master\trunk\src\Pages\_ViewImports.cshtml"
using Maple2.AdminLTE.Uil;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a94242d6d058c4187c96464e1d59d3bbd621c209", @"/Pages/UI/Modals.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"53f0106785151316f4b253740706ad0e41a5734c", @"/Pages/_ViewImports.cshtml")]
    public class Pages_UI_Modals : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "D:\Learning\Repositories\AdminLTE-Maple2-Master\trunk\src\Pages\UI\Modals.cshtml"
  
    ViewData["Title"] = "Modals";

#line default
#line hidden
            BeginContext(64, 1, true);
            WriteLiteral("\n");
            EndContext();
            DefineSection("Styles", async() => {
                BeginContext(82, 341, true);
                WriteLiteral(@"
    <style>
        .example-modal .modal {
            position: relative;
            top: auto;
            bottom: auto;
            right: auto;
            left: auto;
            display: block;
            z-index: 1;
        }

        .example-modal .modal {
            background: transparent !important;
        }
    </style>
");
                EndContext();
            }
            );
            BeginContext(425, 1, true);
            WriteLiteral("\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(444, 2, true);
                WriteLiteral("\n\n");
                EndContext();
            }
            );
            BeginContext(448, 7726, true);
            WriteLiteral(@"
<!-- Content Header (Page header) -->
<section class=""content-header"">
    <h1>
        Modals
        <small>new</small>
    </h1>
    <ol class=""breadcrumb"">
        <li><a href=""#""><i class=""fa fa-dashboard""></i> Home</a></li>
        <li><a href=""#"">UI</a></li>
        <li class=""active"">Modals</li>
    </ol>
</section>

<!-- Main content -->
<section class=""content"">
    <div class=""callout callout-info"">
        <h4>Reminder!</h4>
        Instructions for how to use modals are available on the
        <a href=""http://getbootstrap.com/javascript/#modals"">Bootstrap documentation</a>
    </div>

    <div class=""row"">
        <div class=""col-xs-12"">
            <div class=""box box-default"">
                <div class=""box-header with-border"">
                    <h3 class=""box-title"">Modal Examples</h3>
                </div>
                <div class=""box-body"">
                    <button type=""button"" class=""btn btn-default"" data-toggle=""modal"" data-target=""#modal-default"">
                        Laun");
            WriteLiteral(@"ch Default Modal
                    </button>
                    <button type=""button"" class=""btn btn-info"" data-toggle=""modal"" data-target=""#modal-info"">
                        Launch Info Modal
                    </button>
                    <button type=""button"" class=""btn btn-danger"" data-toggle=""modal"" data-target=""#modal-danger"">
                        Launch Danger Modal
                    </button>
                    <button type=""button"" class=""btn btn-warning"" data-toggle=""modal"" data-target=""#modal-warning"">
                        Launch Warning Modal
                    </button>
                    <button type=""button"" class=""btn btn-success"" data-toggle=""modal"" data-target=""#modal-success"">
                        Launch Success Modal
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class=""modal fade"" id=""modal-default"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal");
            WriteLiteral(@"-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h4 class=""modal-title"">Default Modal</h4>
                </div>
                <div class=""modal-body"">
                    <p>One fine body&hellip;</p>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-default pull-left"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" class=""btn btn-primary"">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

    <div class=""modal modal-primary fade"" id=""modal-primary"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" ");
            WriteLiteral(@"class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h4 class=""modal-title"">Primary Modal</h4>
                </div>
                <div class=""modal-body"">
                    <p>One fine body&hellip;</p>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-outline pull-left"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" class=""btn btn-outline"">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

    <div class=""modal modal-info fade"" id=""modal-info"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
   ");
            WriteLiteral(@"                     <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h4 class=""modal-title"">Info Modal</h4>
                </div>
                <div class=""modal-body"">
                    <p>One fine body&hellip;</p>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-outline pull-left"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" class=""btn btn-outline"">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

    <div class=""modal modal-warning fade"" id=""modal-warning"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</");
            WriteLiteral(@"span>
                    </button>
                    <h4 class=""modal-title"">Warning Modal</h4>
                </div>
                <div class=""modal-body"">
                    <p>One fine body&hellip;</p>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-outline pull-left"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" class=""btn btn-outline"">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

    <div class=""modal modal-success fade"" id=""modal-success"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                ");
            WriteLiteral(@"    <h4 class=""modal-title"">Success Modal</h4>
                </div>
                <div class=""modal-body"">
                    <p>One fine body&hellip;</p>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-outline pull-left"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" class=""btn btn-outline"">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

    <div class=""modal modal-danger fade"" id=""modal-danger"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h4 class=""modal-title"">Danger Modal</h4>
        ");
            WriteLiteral(@"        </div>
                <div class=""modal-body"">
                    <p>One fine body&hellip;</p>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-outline pull-left"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" class=""btn btn-outline"">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
</section>
<!-- /.content -->");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ModalsModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ModalsModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ModalsModel>)PageContext?.ViewData;
        public ModalsModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
